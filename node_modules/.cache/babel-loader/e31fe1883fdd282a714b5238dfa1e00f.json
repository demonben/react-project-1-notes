{"ast":null,"code":"var _jsxFileName = \"/Users/dmitrijbenenson/Documents/GitHub/react-project-1-demonben/src/components/ModalComponent.jsx\",\n    _s = $RefreshSig$();\n\nimport Modal from \"react-modal\";\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nModal.setAppElement('#root');\n\nfunction ModalNotes(props) {\n  _s();\n\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setModalIsOpen(true),\n      children: \"open modal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: modalIsOpen,\n      children: [console.log(props), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setModalIsOpen(false),\n          children: \"close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 7\n  }, this);\n}\n\n_s(ModalNotes, \"d4gKB9FOjUoqrytIak5jiPIqzB0=\");\n\n_c = ModalNotes;\nexport default ModalNotes;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalNotes\");","map":{"version":3,"sources":["/Users/dmitrijbenenson/Documents/GitHub/react-project-1-demonben/src/components/ModalComponent.jsx"],"names":["Modal","React","useState","setAppElement","ModalNotes","props","modalIsOpen","setModalIsOpen","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,aAAlB;AACA,OAAOC,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;AAIAF,KAAK,CAACG,aAAN,CAAoB,OAApB;;AACA,SAASC,UAAT,CAAqBC,KAArB,EAA2B;AAAA;;AAEvB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCL,QAAQ,CAAC,KAAD,CAA9C;AACA,sBACE;AAAA,4BACE;AAAQ,MAAA,OAAO,EAAE,MAAMK,cAAc,CAAC,IAAD,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,KAAD;AAAO,MAAA,MAAM,EAAED,WAAf;AAAA,iBACGE,OAAO,CAACC,GAAR,CAAYJ,KAAZ,CADH,eAKE;AAAA,+BACE;AAAQ,UAAA,OAAO,EAAE,MAAME,cAAc,CAAC,KAAD,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcH;;GAjBQH,U;;KAAAA,U;AAoBT,eAAeA,UAAf","sourcesContent":["import Modal from \"react-modal\";\nimport React, {useState} from 'react'\n\n\n\nModal.setAppElement('#root')\nfunction ModalNotes (props){\n    \n    const [modalIsOpen, setModalIsOpen] = useState(false)\n    return (\n      <div>\n        <button onClick={() => setModalIsOpen(true)}>open modal</button>\n        <Modal isOpen={modalIsOpen}>\n          {console.log(props)}\n          {/* <div>{props.modalNotes.note.time}</div> */}\n          {/* <div>{props.ModalNotes.note.title}</div>\n          <div>{props.ModalNotes.note.text}</div> */}\n          <div>\n            <button onClick={() => setModalIsOpen(false)}>close</button>\n          </div>\n        </Modal>\n      </div>\n    );\n}\n\n\nexport default ModalNotes;\n"]},"metadata":{},"sourceType":"module"}