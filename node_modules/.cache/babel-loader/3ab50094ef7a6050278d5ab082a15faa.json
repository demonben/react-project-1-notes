{"ast":null,"code":"var _jsxFileName = \"/Users/dmitrijbenenson/Documents/GitHub/react-project-1-demonben/src/App.js\";\nimport './App.css'; // import MyComponent from './components/component'\n\nimport React from 'react';\nimport UserForm from './components/UserForm';\nimport ListNote from './components/ListNote';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      notes: []\n    };\n  }\n\n  callback(text) {\n    this.setState(prevState => {\n      const note = {\n        id: Date.now(),\n        text: text,\n        title: title,\n        time: new Date().toDateString()\n      };\n      return {\n        notes: [...prevState.notes, note]\n      };\n    });\n  }\n\n  deleteUser(index) {\n    if (window.confirm(\"Are you sure want to delete?\")) {\n      this.state.notes.splice(index, 1);\n      this.setState({\n        notes: this.state.notes\n      });\n      console.log(index);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(UserForm, {\n        callback: (text, title) => {\n          this.callback(text, title);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ListNote, {\n        notes: this.state.notes,\n        onDelete: index => {\n          this.deleteUser(index);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/dmitrijbenenson/Documents/GitHub/react-project-1-demonben/src/App.js"],"names":["React","UserForm","ListNote","App","Component","constructor","props","state","notes","callback","text","setState","prevState","note","id","Date","now","title","time","toDateString","deleteUser","index","window","confirm","splice","console","log","render"],"mappings":";AAAA,OAAO,WAAP,C,CACA;;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,QAAP,MAAqB,uBAArB;;;AAGA,MAAMC,GAAN,SAAkBH,KAAK,CAACI,SAAxB,CAAiC;AAC/BC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACbC,MAAAA,KAAK,EAAC;AADO,KAAb;AAGD;;AACDC,EAAAA,QAAQ,CAACC,IAAD,EAAM;AACZ,SAAKC,QAAL,CAAeC,SAAD,IAAe;AAC3B,YAAMC,IAAI,GAAG;AACXC,QAAAA,EAAE,EAAEC,IAAI,CAACC,GAAL,EADO;AAEXN,QAAAA,IAAI,EAAEA,IAFK;AAGXO,QAAAA,KAAK,EAAEA,KAHI;AAIXC,QAAAA,IAAI,EAAE,IAAIH,IAAJ,GAAWI,YAAX;AAJK,OAAb;AAMA,aAAO;AACLX,QAAAA,KAAK,EAAE,CAAC,GAAGI,SAAS,CAACJ,KAAd,EAAqBK,IAArB;AADF,OAAP;AAGD,KAVD;AAWD;;AACDO,EAAAA,UAAU,CAACC,KAAD,EAAQ;AAChB,QAAGC,MAAM,CAACC,OAAP,CAAe,8BAAf,CAAH,EAAkD;AAChD,WAAKhB,KAAL,CAAWC,KAAX,CAAiBgB,MAAjB,CAAwBH,KAAxB,EAA+B,CAA/B;AACA,WAAKV,QAAL,CAAc;AAAEH,QAAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC;AAApB,OAAd;AACAiB,MAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;AACD;AACF;;AACDM,EAAAA,MAAM,GAAE;AACN,wBACE;AAAA,8BACE,QAAC,QAAD;AAAU,QAAA,QAAQ,EAAE,CAACjB,IAAD,EAAMO,KAAN,KAAc;AAAC,eAAKR,QAAL,CAAcC,IAAd,EAAmBO,KAAnB;AAA0B;AAA7D;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,QAAD;AACE,QAAA,KAAK,EAAE,KAAKV,KAAL,CAAWC,KADpB;AAEE,QAAA,QAAQ,EAAGa,KAAD,IAAW;AAAE,eAAKD,UAAL,CAAgBC,KAAhB;AAAuB;AAFhD;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AASD;;AArC8B;;AAwCjC,eAAelB,GAAf","sourcesContent":["import './App.css';\n// import MyComponent from './components/component'\nimport React from 'react';\nimport UserForm from './components/UserForm';\nimport ListNote from './components/ListNote';\n\n\nclass App extends React.Component{\n  constructor(props) {\n    super(props);\n    this.state = {\n    notes:[]\n    }\n  }\n  callback(text){\n    this.setState((prevState) => {\n      const note = {\n        id: Date.now(),\n        text: text,\n        title: title,\n        time: new Date().toDateString(),\n      };\n      return {\n        notes: [...prevState.notes, note],\n      };\n    });\n  }\n  deleteUser(index) {\n    if(window.confirm(\"Are you sure want to delete?\")){\n      this.state.notes.splice(index, 1)\n      this.setState({ notes: this.state.notes })\n      console.log(index)\n    }  \n  }\n  render(){\n    return (\n      <div>\n        <UserForm callback={(text,title)=>{this.callback(text,title)}}/>\n        <ListNote \n          notes={this.state.notes}\n          onDelete={(index) => { this.deleteUser(index)}}\n        />\n      </div>\n    )\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}